# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: car.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\tcar.proto\"~\n\x07\x43\x61rData\x12\x0e\n\x06\x63\x61r_id\x18\x01 \x01(\x05\x12\x0e\n\x06region\x18\x02 \x01(\t\x12\r\n\x05price\x18\x03 \x01(\x05\x12\x0c\n\x04year\x18\x04 \x01(\t\x12\x14\n\x0cmanufacturer\x18\x05 \x01(\t\x12\r\n\x05model\x18\x06 \x01(\t\x12\x11\n\tcondition\x18\x07 \x01(\t\"%\n\x0b\x43\x61rDataList\x12\x16\n\x04\x63\x61rs\x18\x01 \x03(\x0b\x32\x08.CarData\"\x1c\n\nCarRequest\x12\x0e\n\x06\x63\x61r_id\x18\x01 \x01(\x05\")\n\x0f\x43\x61rDataResponse\x12\x16\n\x04\x63\x61rs\x18\x01 \x01(\x0b\x32\x08.CarData\"\'\n\x15SearchByRegionRequest\x12\x0e\n\x06region\x18\x01 \x01(\t\"%\n\x14SearchByModelRequest\x12\r\n\x05model\x18\x01 \x01(\t\"3\n\x1bSearchByManufacturerRequest\x12\x14\n\x0cmanufacturer\x18\x01 \x01(\t\"#\n\x13SearchByYearRequest\x12\x0c\n\x04year\x18\x01 \x01(\t\"-\n\x18SearchByConditionRequest\x12\x11\n\tcondition\x18\x01 \x01(\t2\xfe\x02\n\x03\x43\x61r\x12*\n\tCarSearch\x12\x0b.CarRequest\x1a\x10.CarDataResponse\x12\'\n\nSearchById\x12\x0b.CarRequest\x1a\x0c.CarDataList\x12\x42\n\x14SearchByManufacturer\x12\x1c.SearchByManufacturerRequest\x1a\x0c.CarDataList\x12<\n\x11SearchByCondition\x12\x19.SearchByConditionRequest\x1a\x0c.CarDataList\x12\x32\n\x0cSearchByYear\x12\x14.SearchByYearRequest\x1a\x0c.CarDataList\x12\x34\n\rSearchByModel\x12\x15.SearchByModelRequest\x1a\x0c.CarDataList\x12\x36\n\x0eSearchByRegion\x12\x16.SearchByRegionRequest\x1a\x0c.CarDataListb\x06proto3')



_CARDATA = DESCRIPTOR.message_types_by_name['CarData']
_CARDATALIST = DESCRIPTOR.message_types_by_name['CarDataList']
_CARREQUEST = DESCRIPTOR.message_types_by_name['CarRequest']
_CARDATARESPONSE = DESCRIPTOR.message_types_by_name['CarDataResponse']
_SEARCHBYREGIONREQUEST = DESCRIPTOR.message_types_by_name['SearchByRegionRequest']
_SEARCHBYMODELREQUEST = DESCRIPTOR.message_types_by_name['SearchByModelRequest']
_SEARCHBYMANUFACTURERREQUEST = DESCRIPTOR.message_types_by_name['SearchByManufacturerRequest']
_SEARCHBYYEARREQUEST = DESCRIPTOR.message_types_by_name['SearchByYearRequest']
_SEARCHBYCONDITIONREQUEST = DESCRIPTOR.message_types_by_name['SearchByConditionRequest']
CarData = _reflection.GeneratedProtocolMessageType('CarData', (_message.Message,), {
  'DESCRIPTOR' : _CARDATA,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:CarData)
  })
_sym_db.RegisterMessage(CarData)

CarDataList = _reflection.GeneratedProtocolMessageType('CarDataList', (_message.Message,), {
  'DESCRIPTOR' : _CARDATALIST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:CarDataList)
  })
_sym_db.RegisterMessage(CarDataList)

CarRequest = _reflection.GeneratedProtocolMessageType('CarRequest', (_message.Message,), {
  'DESCRIPTOR' : _CARREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:CarRequest)
  })
_sym_db.RegisterMessage(CarRequest)

CarDataResponse = _reflection.GeneratedProtocolMessageType('CarDataResponse', (_message.Message,), {
  'DESCRIPTOR' : _CARDATARESPONSE,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:CarDataResponse)
  })
_sym_db.RegisterMessage(CarDataResponse)

SearchByRegionRequest = _reflection.GeneratedProtocolMessageType('SearchByRegionRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHBYREGIONREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:SearchByRegionRequest)
  })
_sym_db.RegisterMessage(SearchByRegionRequest)

SearchByModelRequest = _reflection.GeneratedProtocolMessageType('SearchByModelRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHBYMODELREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:SearchByModelRequest)
  })
_sym_db.RegisterMessage(SearchByModelRequest)

SearchByManufacturerRequest = _reflection.GeneratedProtocolMessageType('SearchByManufacturerRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHBYMANUFACTURERREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:SearchByManufacturerRequest)
  })
_sym_db.RegisterMessage(SearchByManufacturerRequest)

SearchByYearRequest = _reflection.GeneratedProtocolMessageType('SearchByYearRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHBYYEARREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:SearchByYearRequest)
  })
_sym_db.RegisterMessage(SearchByYearRequest)

SearchByConditionRequest = _reflection.GeneratedProtocolMessageType('SearchByConditionRequest', (_message.Message,), {
  'DESCRIPTOR' : _SEARCHBYCONDITIONREQUEST,
  '__module__' : 'car_pb2'
  # @@protoc_insertion_point(class_scope:SearchByConditionRequest)
  })
_sym_db.RegisterMessage(SearchByConditionRequest)

_CAR = DESCRIPTOR.services_by_name['Car']
if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CARDATA._serialized_start=13
  _CARDATA._serialized_end=139
  _CARDATALIST._serialized_start=141
  _CARDATALIST._serialized_end=178
  _CARREQUEST._serialized_start=180
  _CARREQUEST._serialized_end=208
  _CARDATARESPONSE._serialized_start=210
  _CARDATARESPONSE._serialized_end=251
  _SEARCHBYREGIONREQUEST._serialized_start=253
  _SEARCHBYREGIONREQUEST._serialized_end=292
  _SEARCHBYMODELREQUEST._serialized_start=294
  _SEARCHBYMODELREQUEST._serialized_end=331
  _SEARCHBYMANUFACTURERREQUEST._serialized_start=333
  _SEARCHBYMANUFACTURERREQUEST._serialized_end=384
  _SEARCHBYYEARREQUEST._serialized_start=386
  _SEARCHBYYEARREQUEST._serialized_end=421
  _SEARCHBYCONDITIONREQUEST._serialized_start=423
  _SEARCHBYCONDITIONREQUEST._serialized_end=468
  _CAR._serialized_start=471
  _CAR._serialized_end=853
# @@protoc_insertion_point(module_scope)
